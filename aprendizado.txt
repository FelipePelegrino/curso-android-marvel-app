-> O que estou aprendendo de novo/reforçando melhor com o curso?

	• Novidade e utilização do detekt (ferramenta de analise estatica de codigo)
	
	• Modularização do app, quais os motivos?
		- Build mais performático (só builda os arquivos do modulo alterado)
		- Estrutura e facilitação na organização do código (encaixa muito bem com Clean Architecture)
		- Como trazer as dependencias de um modulo para outro
		
	• Utilização do httplogging para apresentar os dados no log apenas quando for debug
	
	• Melhor utilização do interceptor para definir as chaves de api e url base
	
	• Uma das formas segures de armazenar apiKeys no android ->
		- apikey.properties
		- BuildConfig
		
	• Utilização consciente do principio L do soLid, principio da substituição por interface (Liskov)
		- utilização através da clean, definindo os métodos de acesso a dados remoto, e a api volátil implementa essas regras
		- Criando interfaces para definir os métodos de acesso a dados remoto/local na camada core, e implementando com os frameworks volateis na camada app
		
	• Como utilizar o hilt para:
		- Prover dependencias de classes que "não são minhas" | Provide | Object
		- Prover dependencias de interfaces que são minhas | Binds | Interface
		
	• Use cases:
		- Faz toda a conversão/ponte entre camada de dados e camada de UI
		- Corresponde a somente um caso de uso, um unico fluxo, uma unica ação
	
	• Configuração de um Paging3 com Clean Architecutre (UseCase + Interface sobre repository/datasource + flow)